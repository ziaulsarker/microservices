[{"/Users/zsarker/Desktop/microservices/client/src/index.tsx":"1","/Users/zsarker/Desktop/microservices/client/src/components/App.tsx":"2","/Users/zsarker/Desktop/microservices/client/src/contexts/posts-context.js":"3","/Users/zsarker/Desktop/microservices/client/src/hooks/fetchPosts.js":"4","/Users/zsarker/Desktop/microservices/client/src/components/posts.tsx":"5","/Users/zsarker/Desktop/microservices/client/src/components/postCreate.tsx":"6","/Users/zsarker/Desktop/microservices/client/src/components/commentCreate.tsx":"7","/Users/zsarker/Desktop/microservices/client/src/hooks/fetchComments.js":"8"},{"size":240,"mtime":1609560620652,"results":"9","hashOfConfig":"10"},{"size":377,"mtime":1609564183160,"results":"11","hashOfConfig":"10"},{"size":435,"mtime":1609575446636,"results":"12","hashOfConfig":"10"},{"size":620,"mtime":1609707224384,"results":"13","hashOfConfig":"10"},{"size":674,"mtime":1609707494625,"results":"14","hashOfConfig":"10"},{"size":1911,"mtime":1609707158632,"results":"15","hashOfConfig":"10"},{"size":2011,"mtime":1609575606752,"results":"16","hashOfConfig":"10"},{"size":508,"mtime":1609574410546,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1p5jxff",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zsarker/Desktop/microservices/client/src/index.tsx",[],["37","38"],"/Users/zsarker/Desktop/microservices/client/src/components/App.tsx",[],"/Users/zsarker/Desktop/microservices/client/src/contexts/posts-context.js",[],["39","40"],"/Users/zsarker/Desktop/microservices/client/src/hooks/fetchPosts.js",["41"],"/Users/zsarker/Desktop/microservices/client/src/components/posts.tsx",[],"/Users/zsarker/Desktop/microservices/client/src/components/postCreate.tsx",[],"/Users/zsarker/Desktop/microservices/client/src/components/commentCreate.tsx",["42"],"\nimport React, { useState, SyntheticEvent, useMemo, useEffect } from \"react\";\n\ninterface Props {\n    postId: string;\n}\n\nfunction CommentCreate ({postId}: Props): React.ReactElement {\n    const [commentContent, setCommentContent] = useState(\"\");\n    const [comments, setComments] = useState([]);\n\n    useEffect(() => {\n        const getComments = async (id:string) => {\n            try {\n                const response = await fetch(`http://127.0.0.1:3002/posts/${id}/comments`);\n                const comments = await response.json();\n                setComments(comments);\n            } catch (err) {\n                return comments;\n            }\n        };\n        getComments(postId);\n    }, []);\n\n    const memoizedJSX = useMemo(() => {\n    const handleCommentCreate = async (event: SyntheticEvent) => {\n        event.preventDefault();\n        const response = await fetch(`http://127.0.0.1:3002/posts/${postId}/comments`, {\n            method: \"POST\",\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({content: commentContent})\n        })\n        const comments = await response.json();\n        console.log(comments)\n        setCommentContent(\"\");\n        setComments(comments);\n    }\n       return (\n           <div>\n                {comments.map(({commentID, content}) => <li key={commentID}>{content}</li>)}\n                <form onSubmit={handleCommentCreate}>\n                    <label  className=\"block\">{postId}</label>\n                    <input type=\"text\" onChange={e => setCommentContent(e.target.value)} value={commentContent} className=\"border-2 border-blue-500 border-opacity-75 md:border-opacity-50 px-2 py-1\"/>\n                    <input type=\"submit\" value=\"Add Comment\" className=\"border-2 border-blue-500 border-opacity-75 md:border-opacity-50 px-2 py-1\"/>\n                </form>\n            </div>\n       );\n    }, [postId, comments, commentContent]);\n\n    return memoizedJSX;\n}\n\n\nexport default CommentCreate","/Users/zsarker/Desktop/microservices/client/src/hooks/fetchComments.js",["43"],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},{"ruleId":"52","severity":1,"message":"53","line":23,"column":8,"nodeType":"54","endLine":23,"endColumn":10,"suggestions":"55"},{"ruleId":"48","severity":1,"message":"49","line":1,"column":8,"nodeType":"50","messageId":"51","endLine":1,"endColumn":13},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'comments' and 'postId'. Either include them or remove the dependency array.","ArrayExpression",["58"],"no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [comments, postId]",{"range":"61","text":"62"},[696,698],"[comments, postId]"]