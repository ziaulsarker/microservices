[{"/Users/zsarker/Desktop/microservices/client/src/index.tsx":"1","/Users/zsarker/Desktop/microservices/client/src/components/App.tsx":"2","/Users/zsarker/Desktop/microservices/client/src/contexts/posts-context.js":"3","/Users/zsarker/Desktop/microservices/client/src/hooks/fetchPosts.js":"4","/Users/zsarker/Desktop/microservices/client/src/components/posts.tsx":"5","/Users/zsarker/Desktop/microservices/client/src/components/postCreate.tsx":"6"},{"size":240,"mtime":1609560620652,"results":"7","hashOfConfig":"8"},{"size":291,"mtime":1609132567016,"results":"9","hashOfConfig":"8"},{"size":434,"mtime":1609125953658,"results":"10","hashOfConfig":"8"},{"size":566,"mtime":1609126057449,"results":"11","hashOfConfig":"8"},{"size":548,"mtime":1609127202774,"results":"12","hashOfConfig":"8"},{"size":1738,"mtime":1609559735859,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1p5jxff",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"/Users/zsarker/Desktop/microservices/client/src/index.tsx",[],"/Users/zsarker/Desktop/microservices/client/src/components/App.tsx",[],["29","30"],"/Users/zsarker/Desktop/microservices/client/src/contexts/posts-context.js",[],["31","32"],"/Users/zsarker/Desktop/microservices/client/src/hooks/fetchPosts.js",["33"],"import React, {useState, useEffect} from 'react';\n\nfunction useFetchPosts() {\n    const [posts, setPosts] = useState({});\n    const getPosts = async () => {\n        const postEndpoint = 'http://127.0.0.1:3001/posts'\n        try{\n            const postsRes = await fetch(postEndpoint);\n            const fetchedPosts = await postsRes.json();\n            setPosts(fetchedPosts);\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    useEffect(() => {\n        getPosts();\n    }, [])\n\n    return { posts, setPosts };\n}\n\nexport default useFetchPosts","/Users/zsarker/Desktop/microservices/client/src/components/posts.tsx",[],"/Users/zsarker/Desktop/microservices/client/src/components/postCreate.tsx",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":1,"column":8,"nodeType":"40","messageId":"41","endLine":1,"endColumn":13},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]