[{"/Users/zsarker/Desktop/microservices/client/src/index.tsx":"1","/Users/zsarker/Desktop/microservices/client/src/components/App.tsx":"2","/Users/zsarker/Desktop/microservices/client/src/components/posts.tsx":"3","/Users/zsarker/Desktop/microservices/client/src/contexts/posts-context.js":"4","/Users/zsarker/Desktop/microservices/client/src/hooks/fetchPosts.js":"5"},{"size":211,"mtime":1608786057769,"results":"6","hashOfConfig":"7"},{"size":231,"mtime":1609048949730,"results":"8","hashOfConfig":"7"},{"size":404,"mtime":1609121368409,"results":"9","hashOfConfig":"7"},{"size":434,"mtime":1609049723377,"results":"10","hashOfConfig":"7"},{"size":566,"mtime":1609049861043,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1p5jxff",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"21"},"/Users/zsarker/Desktop/microservices/client/src/index.tsx",[],["25","26"],"/Users/zsarker/Desktop/microservices/client/src/components/App.tsx",[],"/Users/zsarker/Desktop/microservices/client/src/components/posts.tsx",[],"/Users/zsarker/Desktop/microservices/client/src/contexts/posts-context.js",[],["27","28"],"/Users/zsarker/Desktop/microservices/client/src/hooks/fetchPosts.js",["29"],"import React, {useState, useEffect} from 'react';\n\nfunction useFetchPosts() {\n    const [posts, setPosts] = useState([]);\n    const getPosts = async () => {\n        const postEndpoint = 'http://127.0.0.1:3001/posts'\n        try{\n            const postsRes = await fetch(postEndpoint);\n            const fetchedPosts = await postsRes.json();\n            setPosts(fetchedPosts);\n        } catch (err) {\n            console.error(err)\n        }\n    }\n\n    useEffect(() => {\n        getPosts();\n    }, [])\n\n    return { posts, setPosts };\n}\n\nexport default useFetchPosts",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":1,"column":8,"nodeType":"36","messageId":"37","endLine":1,"endColumn":13},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]